"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/async-odoo-xmlrpc";
exports.ids = ["vendor-chunks/async-odoo-xmlrpc"];
exports.modules = {

/***/ "(api)/./node_modules/async-odoo-xmlrpc/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/async-odoo-xmlrpc/lib/index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\n/*\r\n* Author: Faisal Sami\r\n* mail: faisalsami78@gmail.com\r\n* https://github.com/faisalsami/odoo-xmlrpc\r\n*\r\n* Modify by nguyenvantien2009\r\n* http://nguyenvantien2009.com\r\n*/\r\nvar xmlrpc = __webpack_require__(/*! xmlrpc */ \"xmlrpc\");\r\nvar url = __webpack_require__(/*! url */ \"url\");\r\nvar Odoo = /** @class */ (function () {\r\n    function Odoo(config) {\r\n        var _this = this;\r\n        config = config || {};\r\n        var urlparts = url.parse(config.url);\r\n        this.host = urlparts.hostname;\r\n        this.port = config.port || urlparts.port;\r\n        this.db = config.db;\r\n        this.username = config.username;\r\n        this.password = config.password;\r\n        this.secure = true;\r\n        if (urlparts.protocol !== 'https:') {\r\n            this.secure = false;\r\n        }\r\n        var uid = 0;\r\n        /**\r\n         * connect to XML-RPC of Odoo base on setting in config.\r\n         */\r\n        this.connect = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var clientOptions, client, params;\r\n            return __generator(this, function (_a) {\r\n                clientOptions = {\r\n                    host: this.host,\r\n                    port: this.port,\r\n                    path: '/xmlrpc/2/common'\r\n                };\r\n                client = this.secure === false\r\n                    ? xmlrpc.createClient(clientOptions)\r\n                    : xmlrpc.createSecureClient(clientOptions);\r\n                params = [\r\n                    this.db,\r\n                    this.username,\r\n                    this.password,\r\n                    {} // empty object.\r\n                ];\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        client.methodCall('authenticate', params, function (error, value) {\r\n                            if (error) {\r\n                                reject(error);\r\n                            }\r\n                            if (!value) {\r\n                                reject({ message: \"No UID returned from authentication.\" });\r\n                            }\r\n                            uid = value;\r\n                            resolve(value);\r\n                        });\r\n                    })];\r\n            });\r\n        }); };\r\n        /**\r\n         * Execute a method from model in Odoo.\r\n         *\r\n         * @param {String} model Model name in Odoo.\r\n         * @param {String} method Name of method in Odoo.\r\n         * @param {Array<Object>} params Params in to execute from Odoo.\r\n         */\r\n        this.execute_kw = function (model, method, params) { return __awaiter(_this, void 0, void 0, function () {\r\n            var clientOptions, client, fparams;\r\n            return __generator(this, function (_a) {\r\n                clientOptions = {\r\n                    host: this.host,\r\n                    port: this.port,\r\n                    path: '/xmlrpc/2/object'\r\n                };\r\n                client = this.secure === false\r\n                    ? xmlrpc.createClient(clientOptions)\r\n                    : xmlrpc.createSecureClient(clientOptions);\r\n                fparams = [\r\n                    this.db,\r\n                    uid,\r\n                    this.password,\r\n                    model,\r\n                    method,\r\n                    params\r\n                ];\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        client.methodCall('execute_kw', fparams, function (error, value) {\r\n                            error ? reject(error) : resolve(value);\r\n                        });\r\n                    })];\r\n            });\r\n        }); };\r\n        /**\r\n         * call workflow in odoo.\r\n         *\r\n         * @param {String} model Model name in Odoo\r\n         * @param {String} method Method name in Odoo\r\n         * @param {Object[]} params List parameters to call xml-rpc.\r\n         */\r\n        this.exec_workflow = function (model, method, params) { return __awaiter(_this, void 0, void 0, function () {\r\n            var clientOptions, client, fparams;\r\n            return __generator(this, function (_a) {\r\n                clientOptions = {\r\n                    host: this.host,\r\n                    port: this.port,\r\n                    path: '/xmlrpc/2/object'\r\n                };\r\n                client = this.secure === false\r\n                    ? xmlrpc.createClient(clientOptions)\r\n                    : xmlrpc.createSecureClient(clientOptions);\r\n                fparams = [\r\n                    this.db,\r\n                    uid,\r\n                    this.password,\r\n                    model,\r\n                    method,\r\n                    params\r\n                ];\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        client.methodCall('exec_workflow', fparams, function (error, value) {\r\n                            error ? reject(error) : resolve(value);\r\n                        });\r\n                    })];\r\n            });\r\n        }); };\r\n        this.render_report = function (report, params) { return __awaiter(_this, void 0, void 0, function () {\r\n            var clientOptions, client, fparams;\r\n            return __generator(this, function (_a) {\r\n                clientOptions = {\r\n                    host: this.host,\r\n                    port: this.port,\r\n                    path: '/xmlrpc/2/report'\r\n                };\r\n                client = this.secure === false\r\n                    ? xmlrpc.createClient(clientOptions)\r\n                    : xmlrpc.createSecureClient(clientOptions);\r\n                fparams = [\r\n                    this.db,\r\n                    uid,\r\n                    this.password,\r\n                    report,\r\n                    params\r\n                ];\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        client.methodCall('render_report', fparams, function (error, value) {\r\n                            error ? reject(error) : resolve(value);\r\n                        });\r\n                    })];\r\n            });\r\n        }); };\r\n    }\r\n    return Odoo;\r\n}());\r\nmodule.exports = Odoo;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./node_modules/async-odoo-xmlrpc/lib/index.js\n");

/***/ })

};
;